package main

import (
	"fmt"
	"log"
	"net/http"
	"strings"

	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	language "golang.org/x/text/language"
	message "golang.org/x/text/message"
)

type HelloWorld struct {
	Message string `json:"message"`
}

type OrderDetail struct {
	ID          uint64  `json:"id"`
	Name        string  `json:"name"`
	VariantName string  `json:"variantName"`
	Qty         float64 `json:"qty"`
	Unit        string  `json:"unit"`
	Price       float64 `json:"price"`
	Discount    float64 `json:"discount"`
	Pot         float64 `json:"pot"`
	Subtotal    float64 `json:"subtotal"`
}

type CustomerOrder struct {
	ID            uint64        `json:"id"`
	SalesName     string        `json:"salesName,omitempty"`
	CreatedAt     string        `json:"createdAt"`
	DueAt         string        `json:"dueAt"`
	Description   string        `json:"description,omitempty"`
	Total         float64       `json:"total"`
	Payment       float64       `json:"payment"`
	RemainPayment float64       `json:"remainPayment"`
	CustomerName  string        `json:"customerName"`
	Address       string        `json:"address"`
	UpdatedBy     string        `json:"updatedBy"`
	Details       []OrderDetail `json:"details"`
}

func main() {
	e := echo.New()
	e.Use(middleware.CORSWithConfig(middleware.CORSConfig{
		AllowOrigins: []string{"http://localhost:5173", "http://localhost:3000"},
		AllowHeaders: []string{echo.HeaderOrigin, echo.HeaderContentType, echo.HeaderAccept},
	}))
	api := e.Group("/api/v1")
	e.GET("/hello", Greetings)
	api.POST("/print-nota", PrintNota)
	e.Logger.Fatal(e.Start(":3000"))
}

func Greetings(c echo.Context) error {
	return c.JSON(http.StatusOK, HelloWorld{
		Message: "Hello World",
	})
}

func PrintNota(c echo.Context) error {

	data := CustomerOrder{}
	if err := c.Bind(&data); err != nil {
		log.Println(err.Error())
		return err
	}

	sep := "-"
	sepCount := 20 + 5 + 6 + 9 + 12 + 1
	sep2 := "%39s"
	sep3 := "%15s"
	s1 := "%-20v"
	s2 := "%5v"
	s3 := " %-6v"
	s4 := "%9s"
	s5 := "%12s"

	s := strings.Builder{}
	s.WriteString(fmt.Sprintf("ORDER ID:  %d\n", data.ID))
	s.WriteString(fmt.Sprintf("SALES:     %s\n", data.SalesName))
	s.WriteString(fmt.Sprintf("PELANGGAN: %s\n", data.CustomerName))
	s.WriteString(fmt.Sprintf("ALAMAT:    %s\n", data.Address))
	s.WriteString(strings.Repeat(sep, sepCount))
	s.WriteString("\n")
	s.WriteString(fmt.Sprintf(s1, "NAMA BARANG"))
	s.WriteString(fmt.Sprintf(s2, "QTY"))
	s.WriteString(fmt.Sprintf(s3, "UNIT"))
	s.WriteString(fmt.Sprintf(s4, "HARGA"))
	s.WriteString(fmt.Sprintf(s5, "SUBTOTAL"))
	s.WriteString("\n")
	s.WriteString(strings.Repeat(sep, sepCount))
	s.WriteString("\n")
	p := message.NewPrinter(language.Indonesian)

	for _, d := range data.Details {
		name := d.Name
		if len(d.VariantName) > 1 {
			name += ", " + d.VariantName
		}

		if len(name) > 20 {
			name = name[0:20]
		}

		s.WriteString(fmt.Sprintf(s1, name))
		s.WriteString(fmt.Sprintf(s2, d.Qty))
		s.WriteString(fmt.Sprintf(s3, d.Unit))
		s.WriteString(fmt.Sprintf(s4, p.Sprintf("%0.f", d.Pot)))
		s.WriteString(fmt.Sprintf(s5, p.Sprintf("%0.f", d.Subtotal)))
		s.WriteString("\n")
	}
	s.WriteString(strings.Repeat(sep, sepCount))
	s.WriteString("\n")
	s.WriteString(fmt.Sprintf(sep2, "TOTAL"))
	s.WriteString(fmt.Sprintf(sep3, p.Sprintf("%0.f\n", data.Total)))
	s.WriteString(fmt.Sprintf(sep2, "BAYAR"))
	s.WriteString(fmt.Sprintf(sep3, p.Sprintf("%0.f\n", data.Payment)))
	s.WriteString(fmt.Sprintf(sep2, "SISA BAYAR"))
	s.WriteString(fmt.Sprintf(sep3, p.Sprintf("%0.f\n", data.RemainPayment)))

	log.Println(s.String())

	return c.JSON(http.StatusOK, HelloWorld{
		Message: fmt.Sprintf("Print success Nota No. %d", data.ID),
	})
}
